version: '3.8'

services:
  # X√ìA: To√†n b·ªô service 'db' ƒë√£ b·ªã x√≥a kh·ªèi ƒë√¢y.
  # X√ìA: To√†n b·ªô service 'redis' ƒë√£ b·ªã x√≥a kh·ªèi ƒë√¢y.

  # --- KAFKA SETUP ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    networks:
      - ecommerce-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka_broker
    networks:
      - ecommerce-net
    depends_on:
      - zookeeper
    ports:
      # Port 9092 ƒë·ªÉ c√°c ·ª©ng d·ª•ng b√™n ngo√†i Docker (tr√™n m√°y host) c√≥ th·ªÉ k·∫øt n·ªëi
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # Listener cho k·∫øt n·ªëi t·ª´ B√äN TRONG Docker (qua service name 'kafka')
      # Listener cho k·∫øt n·ªëi t·ª´ B√äN NGO√ÄI Docker (qua localhost)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INTERNAL://kafka:29092,PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest # S·ª¨A L·ªñI: T√™n image ch√≠nh x√°c
    container_name: kafka_ui
    depends_on:
      - kafka
    ports:
      # Map c·ªïng 8080 c·ªßa container sang 8090 c·ªßa m√°y host ƒë·ªÉ tr√°nh xung ƒë·ªôt
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092 # K·∫øt n·ªëi t·ªõi Kafka qua m·∫°ng n·ªôi b·ªô
    networks:
      - ecommerce-net
  # --- END KAFKA SETUP ---

  mainecommerce:
    build:
      context: .
      dockerfile: MainEcommerceService/Dockerfile
    container_name: main_ecommerce_service
    ports:
      - "5166:8080"
    depends_on:
      - kafka # S·ª¨A: X√≥a 'db' v√† 'redis' kh·ªèi depends_on
    environment:
      - GatewayBaseUrl=${GATEWAY_BASE_URL}
      # S·ª¨A: S·ª≠ d·ª•ng bi·∫øn m√¥i tr∆∞·ªùng cho connection string m·ªõi
      - ConnectionStrings__MainDbService=${EXTERNAL_DB_CONNECTION}
      - ConnectionStrings__RedisConnection=${EXTERNAL_REDIS_CONNECTION}
      - Kafka__BootstrapServers=kafka:29092
      - jwt__Secret-Key=${JWT_SECRET_KEY}
      - jwt__Issuer=${JWT_ISSUER}
      - jwt__Audience=${JWT_AUDIENCE}
      - ASPNETCORE_ENVIRONMENT=Development
      
    networks:
      - ecommerce-net

  productservice:
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    container_name: product_service
    ports:
      - "5079:8080"
    depends_on:
      - kafka # S·ª¨A: X√≥a 'db' v√† 'redis' kh·ªèi depends_on
    environment:
      # S·ª¨A: S·ª≠ d·ª•ng bi·∫øn m√¥i tr∆∞·ªùng cho connection string m·ªõi
      - ConnectionStrings__ProductDbService=${EXTERNAL_PRODUCT_DB_CONNECTION}
      - ConnectionStrings__RedisConnection=${EXTERNAL_REDIS_CONNECTION}
      - Kafka__BootstrapServers=kafka:29092
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - AWS__Region=us-east-1
      - AWS__BucketName=ecommerce231
      - jwt__Secret-Key=${JWT_SECRET_KEY}
      - jwt__Issuer=${JWT_ISSUER}
      - jwt__Audience=${JWT_AUDIENCE}
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - ecommerce-net

  gateway:
    build:
      context: .
      dockerfile: GateWayService/Dockerfile
    container_name: gateway_service
    ports:
      - "5282:8080"
    depends_on:
      - mainecommerce
      - productservice
    environment:
      # ƒê·∫£m b·∫£o d√≤ng n√†y t·ªìn t·∫°i v√† ch√≠nh x√°c
      - ASPNETCORE_ENVIRONMENT=Docker
    networks:
      - ecommerce-net

  blazorapp:
    build:
      context: .
      dockerfile: BlazorWebApp/Dockerfile
    container_name: blazor_webapp
    ports:
      - "5093:8080"
    depends_on:
      - gateway
    environment:
      # üî• S·ª¨A: S·ª≠ d·ª•ng bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
      - GatewayBaseUrl=${GATEWAY_BASE_URL}
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      # Email Settings
      - EmailSettings__SmtpHost=${EMAIL_SMTP_HOST}
      - EmailSettings__SmtpPort=${EMAIL_SMTP_PORT}
      - EmailSettings__FromEmail=${EMAIL_FROM_EMAIL}
      - EmailSettings__Username=${EMAIL_USERNAME}
      - EmailSettings__Password=${EMAIL_PASSWORD}
      # JWT Settings
      - jwt__Secret-Key=${JWT_SECRET_KEY}
      - jwt__Issuer=${JWT_ISSUER}
      - jwt__Audience=${JWT_AUDIENCE}
      # App Settings
      - AppSettings__BaseUrl=${APP_BASE_URL}
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge