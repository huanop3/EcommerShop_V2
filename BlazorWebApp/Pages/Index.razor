@page "/"
@using BlazorWebApp.Services
@using MainEcommerceService.Models.ViewModel
@using ProductService.Models.ViewModel
@inject ProdService ProdService
@inject CategoryService CategoryService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>TechMart - Premium Technology Products Store</PageTitle>
<link href="css/index.css" rel="stylesheet" />

<!-- Main Container -->
<div class="body-container">
    <div class="container-fluid">
        
        <!-- Hero Banner Section -->
        <section class="hero-section">
            <div class="container">
                <div id="heroCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="5000">
                    <!-- Indicators -->
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="0" class="active"
                            aria-current="true" aria-label="Slide 1"></button>
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="1"
                            aria-label="Slide 2"></button>
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="2"
                            aria-label="Slide 3"></button>
                        <button type="button" data-bs-target="#heroCarousel" data-bs-slide-to="3"
                            aria-label="Slide 4"></button>
                    </div>

                    <!-- Carousel items -->
                    <div class="carousel-inner">
                        <!-- Slide 1 - Laptop -->
                        <div class="carousel-item active">
                            <div class="banner-container tech-gradient-1">
                                <div class="banner-background" style="background-image: url('/images/banners/laptop-hero.jpg')"></div>
                                <div class="banner-overlay"></div>
                                <div class="banner-content">
                                    <p class="banner-tagline">💻 Starting at $699.99</p>
                                    <h1 class="banner-heading">Premium Laptops<br>For Every Need</h1>
                                    <p class="banner-description">Discover high-performance laptops from top brands. Perfect for work, gaming, and creativity</p>
                                    <a href="/products/laptops" class="btn-shop-now">
                                        <i class="fas fa-laptop"></i>
                                        Shop Laptops
                                        <span class="icon-arrow"></span>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Slide 2 - Smartphone -->
                        <div class="carousel-item">
                            <div class="banner-container tech-gradient-2">
                                <div class="banner-background" style="background-image: url('/images/banners/smartphone-hero.jpg')"></div>
                                <div class="banner-overlay"></div>
                                <div class="banner-content">
                                    <p class="banner-tagline">📱 Up to 30% Off</p>
                                    <h1 class="banner-heading">Latest Smartphones<br>& Accessories</h1>
                                    <p class="banner-description">Stay connected with cutting-edge mobile technology and premium accessories</p>
                                    <a href="/products/smartphone" class="btn-shop-now">
                                        <i class="fas fa-mobile-alt"></i>
                                        Explore Phones
                                        <span class="icon-arrow"></span>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Slide 3 - PC -->
                        <div class="carousel-item">
                            <div class="banner-container tech-gradient-3">
                                <div class="banner-background" style="background-image: url('/images/banners/pc-hero.jpg')"></div>
                                <div class="banner-overlay"></div>
                                <div class="banner-content">
                                    <p class="banner-tagline">🖥️ Gaming & Workstation</p>
                                    <h1 class="banner-heading">Powerful Desktop<br>Computers</h1>
                                    <p class="banner-description">Build your dream setup with our high-performance desktop computers and components</p>
                                    <a href="/products/pc" class="btn-shop-now">
                                        <i class="fas fa-desktop"></i>
                                        Build Your PC
                                        <span class="icon-arrow"></span>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Slide 4 - Apple -->
                        <div class="carousel-item">
                            <div class="banner-container tech-gradient-4">
                                <div class="banner-background" style="background-image: url('/images/banners/apple-hero.jpg')"></div>
                                <div class="banner-overlay"></div>
                                <div class="banner-content">
                                    <p class="banner-tagline">🍎 Apple Ecosystem</p>
                                    <h1 class="banner-heading">Apple Products<br>& Accessories</h1>
                                    <p class="banner-description">Complete Apple ecosystem with MacBooks, iPhones, iPads, and premium accessories</p>
                                    <a href="/products/apple" class="btn-shop-now">
                                        <i class="fab fa-apple"></i>
                                        Shop Apple
                                        <span class="icon-arrow"></span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Controls -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#heroCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#heroCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </section>

        <!-- Categories Grid Section -->
        <section class="categories-section">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="section-title text-center mb-5">
                            <p class="section-tagline">🛒 Browse By Category</p>
                            <h2 class="section-heading">Shop Our Technology Categories</h2>
                            <p class="section-description">Discover cutting-edge technology products across all your favorite categories</p>
                        </div>
                        
                        @if (isLoadingCategories)
                        {
                            <div class="loading-categories">
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading categories...</span>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (mainCategories != null && mainCategories.Any())
                        {
                            <div class="category-grid">
                                @foreach (var category in mainCategories)
                                {
                                    <div class="category-card tech-category-@category.CategoryId" @onclick="() => NavigateToCategory(category.CategoryName)">
                                        <div class="category-card-gradient"></div>
                                        <div class="category-card-content">
                                            <div class="category-icon">
                                                <i class="@GetCategoryIcon(category.CategoryName)"></i>
                                            </div>
                                            <h4 class="category-title">@category.CategoryName</h4>
                                            <p class="category-description">@GetCategoryDescription(category.CategoryName)</p>
                                            @if (GetCategoryDiscount(category.CategoryId) > 0)
                                            {
                                                <div class="discount-badge">@GetCategoryDiscount(category.CategoryId)% Off</div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-categories">
                                <p class="text-muted">No categories available at the moment.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        <!-- Deal of the Day Section -->
        <section class="deal-of-day-section">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="section-title text-center mb-4">
                            <p class="section-tagline">⚡ Flash Deals</p>
                            <h2 class="section-heading">Tech Deals of the Day</h2>
                            <p class="section-description">Limited time offers on premium technology products</p>
                        </div>

                        <div class="countdown-wrapper mx-auto mb-5">
                            <div class="countdown-box">
                                <span class="countdown-number" id="days">@timeLeft.Days</span>
                                <span class="countdown-text">Days</span>
                            </div>
                            <span class="countdown-separator">:</span>
                            <div class="countdown-box">
                                <span class="countdown-number" id="hours">@timeLeft.Hours</span>
                                <span class="countdown-text">Hours</span>
                            </div>
                            <span class="countdown-separator">:</span>
                            <div class="countdown-box">
                                <span class="countdown-number" id="minutes">@timeLeft.Minutes</span>
                                <span class="countdown-text">Minutes</span>
                            </div>
                            <span class="countdown-separator">:</span>
                            <div class="countdown-box">
                                <span class="countdown-number" id="seconds">@timeLeft.Seconds</span>
                                <span class="countdown-text">Seconds</span>
                            </div>
                        </div>

                        @if (isLoadingProducts)
                        {
                            <div class="loading-products">
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading products...</span>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (dealProducts != null && dealProducts.Any())
                        {
                            <div class="products-slider-container">
                                <div class="products-slider-controls">
                                    <button class="slider-prev" @onclick="SlidePrev"><i class="fas fa-chevron-left"></i></button>
                                    <button class="slider-next" @onclick="SlideNext"><i class="fas fa-chevron-right"></i></button>
                                </div>

                                <div class="products-row" id="dealProductsSlider">
                                    @foreach (var product in dealProducts.Take(8))
                                    {
                                        <div class="product-card">
                                            @if (HasDiscount(product))
                                            {
                                                <div class="product-badge badge-sale">
                                                    -@GetDiscountPercentage(product)%
                                                </div>
                                            }
                                            else if (IsNewProduct(product.CreatedAt))
                                            {
                                                <div class="product-badge badge-new">New</div>
                                            }
                                            
                                            <div class="product-thumb" @onclick="() => NavigateToProduct(product.ProductId)">
                                                <img src="@GetProductImageUrl(product)" alt="@product.ProductName" loading="lazy">
                                                <div class="product-actions">
                                                    <button class="action-btn quick-view" title="Quick View" @onclick="() => QuickViewProduct(product.ProductId)">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="action-btn add-to-wishlist" title="Add to Wishlist" @onclick="() => AddToWishlist(product.ProductId)">
                                                        <i class="fas fa-heart"></i>
                                                    </button>
                                                    <button class="action-btn add-to-cart" title="Add to Cart" @onclick="() => AddToCart(product.ProductId)">
                                                        <i class="fas fa-shopping-cart"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            
                                            <div class="product-info">
                                                <a href="/category/@product.CategoryId" class="product-category">@GetCategoryName(product)</a>
                                                <h5 class="product-title">
                                                    <a href="/product/@product.ProductId">@product.ProductName</a>
                                                </h5>
                                                <div class="product-rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <i class="@(i <= GetProductRating(product) ? "fas fa-star" : "far fa-star")"></i>
                                                    }
                                                    <span class="rating-count">(@GetReviewCount(product))</span>
                                                </div>
                                                <div class="product-price">
                                                    @if (HasDiscount(product))
                                                    {
                                                        <span class="old-price">$@product.Price.ToString("F2")</span>
                                                        <span class="current-price">$@product.DiscountPrice?.ToString("F2")</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="current-price">$@product.Price.ToString("F2")</span>
                                                    }
                                                </div>
                                                <div class="product-stock">
                                                    @if (product.Quantity > 0)
                                                    {
                                                        <span class="in-stock">In Stock (@product.Quantity left)</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="out-of-stock">Out of Stock</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="empty-products">
                                <div class="empty-icon">
                                    <i class="fas fa-box-open"></i>
                                </div>
                                <h4>No Deals Available</h4>
                                <p>Check back later for exciting tech deals and offers!</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        <!-- Special Offer Banner -->
        <section class="promotional-banner">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="banner-wrapper tech-promo-banner">
                            <div class="banner-content-promo">
                                <div class="promo-badge">🔥 Tech Sale</div>
                                <h2 class="banner-title">Latest Technology<br>Premium Products</h2>
                                <div class="banner-offer">Up to 40% Off - Limited Time!</div>
                                <p class="banner-text">Upgrade your tech setup with our premium collection of laptops, smartphones, and accessories</p>
                                <a href="/products" class="btn-shop">
                                    <i class="fas fa-shopping-bag"></i>
                                    Shop Now
                                </a>
                            </div>
                            <div class="banner-decoration">
                                <div class="floating-tech tech-1">💻</div>
                                <div class="floating-tech tech-2">📱</div>
                                <div class="floating-tech tech-3">🖥️</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- New Arrivals Section -->
        <section class="new-arrivals-section">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="section-title text-center mb-4">
                            <p class="section-tagline">✨ New Arrivals</p>
                            <h2 class="section-heading">Latest Tech Products</h2>
                            <p class="section-description">Discover our newest additions to the technology collection</p>
                        </div>

                        <div class="tabs-wrapper text-center mb-5">
                            <ul class="category-tabs nav justify-content-center">
                                <li class="tab-item @(selectedCategoryTab == "all" ? "active" : "")" @onclick="@(() => FilterByCategory("all"))">
                                    <a class="nav-link">All Products</a>
                                </li>
                                @if (mainCategories != null)
                                {
                                    @foreach (var category in mainCategories)
                                    {
                                        <li class="tab-item @(selectedCategoryTab == category.CategoryId.ToString() ? "active" : "")" @onclick="() => FilterByCategory(category.CategoryId.ToString())">
                                            <a class="nav-link">@category.CategoryName</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>

                        @if (filteredProducts != null && filteredProducts.Any())
                        {
                            <div class="products-grid">
                                @foreach (var product in filteredProducts.Take(8))
                                {
                                    <div class="product-card">
                                        @if (HasDiscount(product))
                                        {
                                            <div class="product-badge badge-sale">
                                                -@GetDiscountPercentage(product)%
                                            </div>
                                        }
                                        else if (IsNewProduct(product.CreatedAt))
                                        {
                                            <div class="product-badge badge-new">New</div>
                                        }
                                        
                                        <div class="product-thumb" @onclick="() => NavigateToProduct(product.ProductId)">
                                            <img src="@GetProductImageUrl(product)" alt="@product.ProductName" loading="lazy">
                                            <div class="product-actions">
                                                <button class="action-btn quick-view" title="Quick View" @onclick="() => QuickViewProduct(product.ProductId)">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="action-btn add-to-wishlist" title="Add to Wishlist" @onclick="() => AddToWishlist(product.ProductId)">
                                                    <i class="fas fa-heart"></i>
                                                </button>
                                                <button class="action-btn add-to-cart" title="Add to Cart" @onclick="() => AddToCart(product.ProductId)">
                                                    <i class="fas fa-shopping-cart"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <div class="product-info">
                                            <a href="/products/@product.CategoryId" class="product-category">@GetCategoryName(product)</a>
                                            <h5 class="product-title">
                                                <a href="/product/@product.ProductId">@product.ProductName</a>
                                            </h5>
                                            <div class="product-rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="@(i <= GetProductRating(product) ? "fas fa-star" : "far fa-star")"></i>
                                                }
                                                <span class="rating-count">(@GetReviewCount(product))</span>
                                            </div>
                                            <div class="product-price">
                                                @if (HasDiscount(product))
                                                {
                                                    <span class="old-price">$@product.Price.ToString("F2")</span>
                                                    <span class="current-price">$@product.DiscountPrice?.ToString("F2")</span>
                                                }
                                                else
                                                {
                                                    <span class="current-price">$@product.Price.ToString("F2")</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-products text-center">
                                <div class="empty-icon">
                                    <i class="fas fa-search"></i>
                                </div>
                                <h4>No Products Found</h4>
                                <p>Try selecting a different category or check back later.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        <!-- Services Section -->
        <section class="services-section">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="section-title text-center mb-5">
                            <h2 class="section-heading">Why Choose TechMart?</h2>
                            <p class="section-description">We're committed to providing the best shopping experience for technology products</p>
                        </div>
                        <div class="services-grid">
                            <!-- Service 1 -->
                            <div class="service-card">
                                <div class="service-icon">
                                    <i class="fas fa-shipping-fast"></i>
                                </div>
                                <h3 class="service-title">Free Shipping</h3>
                                <p class="service-description">Free shipping on orders over $100. Fast and secure delivery for all tech products.</p>
                                <div class="service-highlight">Express delivery available</div>
                            </div>

                            <!-- Service 2 -->
                            <div class="service-card">
                                <div class="service-icon">
                                    <i class="fas fa-tools"></i>
                                </div>
                                <h3 class="service-title">Tech Support</h3>
                                <p class="service-description">Expert technical support and setup assistance for all your purchases.</p>
                                <div class="service-highlight">24/7 tech helpline</div>
                            </div>

                            <!-- Service 3 -->
                            <div class="service-card">
                                <div class="service-icon">
                                    <i class="fas fa-shield-alt"></i>
                                </div>
                                <h3 class="service-title">Warranty Protection</h3>
                                <p class="service-description">Extended warranty options and comprehensive protection plans available.</p>
                                <div class="service-highlight">Up to 3 years coverage</div>
                            </div>

                            <!-- Service 4 -->
                            <div class="service-card">
                                <div class="service-icon">
                                    <i class="fas fa-undo"></i>
                                </div>
                                <h3 class="service-title">Easy Returns</h3>
                                <p class="service-description">30-day return policy with hassle-free returns and exchanges.</p>
                                <div class="service-highlight">No restocking fees</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Featured Stats Section -->
        <section class="stats-section">
            <div class="container">
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-number">25K+</div>
                        <div class="stat-label">Tech Enthusiasts</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-laptop"></i>
                        </div>
                        <div class="stat-number">@(allProducts?.Count() ?? 0)</div>
                        <div class="stat-label">Tech Products</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-award"></i>
                        </div>
                        <div class="stat-number">50+</div>
                        <div class="stat-label">Top Brands</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="stat-number">4.8</div>
                        <div class="stat-label">Customer Rating</div>
                    </div>
                </div>
            </div>
        </section>

    </div>
</div>

@code {
    private IEnumerable<CategoryVM>? categories;
    private IEnumerable<CategoryVM>? mainCategories;
    private IEnumerable<PrdVMWithImages>? allProducts;
    private IEnumerable<PrdVMWithImages>? dealProducts;
    private IEnumerable<PrdVMWithImages>? filteredProducts;
    private bool isLoadingCategories = true;
    private bool isLoadingProducts = true;
    private string selectedCategoryTab = "all";
    private TimeSpan timeLeft = TimeSpan.FromHours(24);
    private Timer? countdownTimer;

    // Main category IDs based on your database
    private readonly int[] mainCategoryIds = { 5, 6, 7, 8 }; // Laptop, SmartPhone, PC, Apple

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
        StartCountdown();
    }

    private async Task LoadDataAsync()
    {
        try
        {
            // Load categories and products simultaneously
            var categoriesTask = CategoryService.GetAllCategoriesAsync();
            var productsTask = ProdService.GetAllProductsAsync();
            
            await Task.WhenAll(categoriesTask, productsTask);
            
            categories = await categoriesTask;
            allProducts = await productsTask;
            
            // Filter main categories (Laptop, SmartPhone, PC, Apple)
            mainCategories = categories?.Where(c => mainCategoryIds.Contains(c.CategoryId))
                                     .OrderBy(c => Array.IndexOf(mainCategoryIds, c.CategoryId));
            
            // Filter products for deals (products with discount price)
            dealProducts = allProducts?.Where(p => HasDiscount(p))
                                     .OrderByDescending(p => GetDiscountPercentage(p));
            
            // Initialize filtered products with all products
            filteredProducts = allProducts?.OrderByDescending(p => p.CreatedAt);
            
            isLoadingCategories = false;
            isLoadingProducts = false;
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
            isLoadingCategories = false;
            isLoadingProducts = false;
            StateHasChanged();
        }
    }

    private void StartCountdown()
    {
        countdownTimer = new Timer(async _ =>
        {
            timeLeft = timeLeft.Subtract(TimeSpan.FromSeconds(1));
            if (timeLeft <= TimeSpan.Zero)
            {
                timeLeft = TimeSpan.FromHours(24); // Reset to 24 hours
            }
            await InvokeAsync(StateHasChanged);
        }, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
    }

    private async Task FilterByCategory(string categoryId)
    {
        selectedCategoryTab = categoryId;
        
        if (categoryId == "all")
        {
            filteredProducts = allProducts?.OrderByDescending(p => p.CreatedAt);
        }
        else if (int.TryParse(categoryId, out int catId))
        {
            filteredProducts = allProducts?.Where(p => p.CategoryId == catId)
                                         .OrderByDescending(p => p.CreatedAt);
        }
        
        StateHasChanged();
    }

    // Helper Methods for Product Logic
    private bool HasDiscount(PrdVMWithImages product)
    {
        return product.DiscountPrice.HasValue && product.DiscountPrice.Value < product.Price;
    }

    private int GetDiscountPercentage(PrdVMWithImages product)
    {
        if (!HasDiscount(product)) return 0;
        
        var discount = ((product.Price - product.DiscountPrice.Value) / product.Price) * 100;
        return (int)Math.Round(discount);
    }

    // Category Helper Methods
    private string GetCategoryIcon(string categoryName)
    {
        return categoryName.ToLower() switch
        {
            "laptop" => "fas fa-laptop",
            "smartphone" => "fas fa-mobile-alt",
            "pc" => "fas fa-desktop",
            "apple" => "fab fa-apple",
            var name when name.Contains("laptop") => "fas fa-laptop",
            var name when name.Contains("phone") || name.Contains("mobile") => "fas fa-mobile-alt",
            var name when name.Contains("pc") || name.Contains("desktop") => "fas fa-desktop",
            var name when name.Contains("apple") => "fab fa-apple",
            var name when name.Contains("tablet") => "fas fa-tablet-alt",
            var name when name.Contains("watch") => "fas fa-clock",
            var name when name.Contains("headphone") || name.Contains("audio") => "fas fa-headphones",
            var name when name.Contains("gaming") => "fas fa-gamepad",
            _ => "fas fa-microchip"
        };
    }

    private string GetCategoryDescription(string categoryName)
    {
        return categoryName.ToLower() switch
        {
            "laptop" => "Portable computers and laptops",
            "smartphone" => "Mobile phones and smartphones", 
            "pc" => "Desktop computers and workstations",
            "apple" => "Apple products and accessories",
            _ => "Technology products"
        };
    }


    private int GetCategoryDiscount(int categoryId)
    {
        var categoryProducts = allProducts?.Where(p => p.CategoryId == categoryId && HasDiscount(p));
        if (categoryProducts?.Any() == true)
        {
            var avgDiscount = categoryProducts.Average(p => GetDiscountPercentage(p));
            return (int)Math.Round(avgDiscount);
        }
        return 0;
    }

    // Product Helper Methods
    private string GetProductImageUrl(PrdVMWithImages product)
    {
        return product.PrimaryImageUrl ?? "images/default-product.png";
    }

    private bool IsNewProduct(DateTime? createdAt)
    {
        if (createdAt.HasValue)
        {
            return DateTime.Now.Subtract(createdAt.Value).TotalDays <= 30;
        }
        return false;
    }

    private int GetProductRating(PrdVMWithImages product)
    {
        // Implement rating logic based on your rating system
        // For now, return random rating based on product price range
        if (product.Price > 1000) return 5;
        if (product.Price > 500) return 4;
        if (product.Price > 200) return Random.Shared.Next(3, 5);
        return Random.Shared.Next(3, 4);
    }

    private int GetReviewCount(PrdVMWithImages product)
    {
        // Implement review count logic
        // For now, return count based on total sold
        return product.TotalSold ?? Random.Shared.Next(5, 200);
    }

    private string GetCategoryName(PrdVMWithImages product)
    {
        return categories?.FirstOrDefault(c => c.CategoryId == product.CategoryId)?.CategoryName ?? "Technology";
    }

    // Navigation Methods
    private void NavigateToProduct(int productId)
    {
        Navigation.NavigateTo($"/product/{productId}");
    }

    private void NavigateToCategory(string categoryName)
    {
        Navigation.NavigateTo($"/products/{categoryName}");
    }

    // Action Methods
    private async Task QuickViewProduct(int productId)
    {
        // Implement quick view modal
        await JSRuntime.InvokeVoidAsync("console.log", $"Quick view product {productId}");
    }

    private async Task AddToWishlist(int productId)
    {
        // Implement add to wishlist
        await JSRuntime.InvokeVoidAsync("console.log", $"Added product {productId} to wishlist");
    }

    private async Task AddToCart(int productId)
    {
        // Implement add to cart
        await JSRuntime.InvokeVoidAsync("console.log", $"Added product {productId} to cart");
    }

    // Slider Methods
    private async Task SlidePrev()
    {
        await JSRuntime.InvokeVoidAsync("slideProducts", "dealProductsSlider", "prev");
    }

    private async Task SlideNext()
    {
        await JSRuntime.InvokeVoidAsync("slideProducts", "dealProductsSlider", "next");
    }

    public void Dispose()
    {
        countdownTimer?.Dispose();
    }
}