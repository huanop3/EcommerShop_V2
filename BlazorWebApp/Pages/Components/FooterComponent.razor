@using MainEcommerceService.Models.ViewModel
@inject CategoryService CategoryService
@inject NavigationManager Navigation

<footer class="footer">
    <link rel="stylesheet" href="css/sitefooter.css" />
    <div class="footer-main">
        <div class="container1">
            <div class="footer-row">
                <!-- Brand Info -->
                <div class="footer-col">
                    <div class="footer-logo">
                        <a href="/">
                            <img src="/images/header/logo.png" alt="Grabit">
                        </a>
                    </div>
                    <p class="footer-description">
                        Grabit is the biggest market of grocery products. Get your daily needs from our store.
                    </p>
                </div>

                <!-- Category Links -->
                <div class="footer-col">
                    <h4 class="footer-heading">Category</h4>
                    <ul class="footer-links">
                        @if (isLoadingCategories)
                        {
                            <li><span class="text-muted">Loading categories...</span></li>
                        }
                        else if (categories?.Any() == true)
                        {
                            @foreach (var category in categories.Take(6))
                            {
                                <li>
                                    <a href="@GetCategoryUrl(category)" @onclick="() => NavigateToCategory(category)">
                                        @category.CategoryName
                                    </a>
                                </li>
                            }
                            @if (categories.Count() > 6)
                            {
                                <li><a href="/products" class="view-all-link">View All Categories</a></li>
                            }
                        }
                        else
                        {
                            <li><span class="text-muted">No categories available</span></li>
                        }
                    </ul>
                </div>

                <!-- Company Links -->
                <div class="footer-col">
                    <h4 class="footer-heading">Company</h4>
                    <ul class="footer-links">
                        <li><a href="/about">About us</a></li>
                        <li><a href="/delivery">Delivery</a></li>
                        <li><a href="/legal-notice">Legal Notice</a></li>
                        <li><a href="/terms">Terms & conditions</a></li>
                        <li><a href="/secure-payment">Secure payment</a></li>
                        <li><a href="/contact">Contact us</a></li>
                    </ul>
                </div>

                <!-- Account Links -->
                <div class="footer-col">
                    <h4 class="footer-heading">Account</h4>
                    <ul class="footer-links">
                        <li><a href="/login">Sign In</a></li>
                        <li><a href="/cart">View Cart</a></li>
                        <li><a href="/return-policy">Return Policy</a></li>
                        <li><a href="/become-vendor">Become a Vendor</a></li>
                        <li><a href="/affiliate">Affiliate Program</a></li>
                        <li><a href="/payments">Payments</a></li>
                    </ul>
                </div>

                <!-- Contact Info -->
                <div class="footer-col">
                    <h4 class="footer-heading">Contact</h4>
                    <ul class="contact-info">
                        <li class="contact-item">
                            <i class="location-icon-dark"></i>
                            <p>2548 Broaddus Maple Court, Madisonville KY 4783, USA.</p>
                        </li>
                        <li class="contact-item">
                            <i class="phone-icon-dark"></i>
                            <a href="tel:+00987654321">+00 9876543210</a>
                        </li>
                        <li class="contact-item">
                            <i class="email-icon-dark"></i>
                            <a href="mailto:example@email.com">example@email.com</a>
                        </li>
                    </ul>
                    
                    <div class="social-links">
                        <a href="https://facebook.com" target="_blank" class="social-link" title="Facebook">
                            <i class="facebook-icon"></i>
                        </a>
                        <a href="https://twitter.com" target="_blank" class="social-link" title="Twitter">
                            <i class="twitter-icon"></i>
                        </a>
                        <a href="https://instagram.com" target="_blank" class="social-link" title="Instagram">
                            <i class="instagram-icon"></i>
                        </a>
                        <a href="https://linkedin.com" target="_blank" class="social-link" title="LinkedIn">
                            <i class="linkedin-icon"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Copyright -->
    <div class="footer-bottom">
        <div class="container1">
            <p class="copyright">Copyright © <a href="/">Grabit</a> all rights reserved. Powered by Grabit.</p>
            <div class="payment-methods">
                <img src="/images/header/payment.png" alt="Payment Methods">
            </div>
        </div>
    </div>
</footer>

@code {
    private IEnumerable<CategoryVM> categories = new List<CategoryVM>();
    private bool isLoadingCategories = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategoriesAsync();
    }

    private async Task LoadCategoriesAsync()
    {
        try
        {
            isLoadingCategories = true;
            categories = await CategoryService.GetAllCategoriesAsync();
            
            // Chỉ lấy parent categories hoặc tất cả categories tùy theo yêu cầu
            if (categories?.Any() == true)
            {
                // Option 1: Chỉ lấy parent categories (categories không có parent)
                categories = categories.Where(c => c.ParentCategoryId == null).OrderBy(c => c.CategoryName);
                
                // Option 2: Lấy tất cả categories (bỏ comment dòng dưới nếu muốn hiển thị tất cả)
                // categories = categories.OrderBy(c => c.CategoryName);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading categories: {ex.Message}");
            categories = new List<CategoryVM>();
        }
        finally
        {
            isLoadingCategories = false;
            StateHasChanged();
        }
    }

    private string GetCategoryUrl(CategoryVM category)
    {
        // Tạo slug từ category name
        var slug = category.CategoryName
            .ToLower()
            .Replace(" ", "-")
            .Replace("&", "and")
            .Replace("/", "-")
            .Replace("\\", "-")
            .Replace("(", "")
            .Replace(")", "")
            .Replace("'", "")
            .Replace("\"", "")
            .Trim('-');
            
        return $"/products/{slug}";
    }

    private void NavigateToCategory(CategoryVM category)
    {
        var url = GetCategoryUrl(category);
        Navigation.NavigateTo(url);
    }
}